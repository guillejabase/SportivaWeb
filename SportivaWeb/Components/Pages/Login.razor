@page "/login"
@using SportivaWeb.Data
@using SportivaWeb.DTOs
@using SportivaWeb.Models
@using SportivaWeb.Services
@using System.ComponentModel.DataAnnotations
@inject UsersService UsersService
@rendermode InteractiveServer

<PageTitle>Sportiva - Iniciar sesión</PageTitle>

<h1>Iniciar sesión</h1>

<FluentStack Orientation="Orientation.Vertical">
    <FluentTextField Label="Email" @bind-Value="UserData.Email" />
    <FluentSpacer />
    <FluentTextField Label="Contraseña" @bind-Value="UserData.Password" />
    <FluentSpacer />
    <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
        <FluentButton Appearance="Appearance.Accent" @onclick="LoginData">Iniciar sesion</FluentButton>
        <p style="font-size: 12px; margin: 0;">No tienes cuenta? <a href="/register">Regístrate</a></p>
    </FluentStack>
    <FluentSpacer />

    @if (!string.IsNullOrEmpty(Message))
    {
        <p>@Message</p>
    }
</FluentStack>

@code {
    private UserDTO UserData = new();
    private string? Message = string.Empty;

    private async Task LoginData()
    {
        var context = new ValidationContext(UserData);
        var results = new List<ValidationResult>();

        if (!Validator.TryValidateObject(UserData, context, results, true))
        {
            Message = string.Join("\n", results.Select(result => result.ErrorMessage));
            return;
        }
        else
        {
            var result = await UsersService.EmailExistsAsync(UserData.Email!);

            if (result)
            {
                var result2 = await UsersService.PasswordCoincidesAsync(UserData.Password!);

                if (result2)
                {
                    Message = "Sesión iniciada.";
                }
                else
                {
                    Message = "Contraseña incorrecta.";
                }
            }
            else
            {
                Message = "Email inexistente.";
            }
        }
    }
}
