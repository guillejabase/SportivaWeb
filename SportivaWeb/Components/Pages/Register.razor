@page "/register"
@using Microsoft.Data.SqlClient
@using SportivaWeb.Models
@using System.ComponentModel.DataAnnotations
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Sportiva - Registrar cuenta</PageTitle>

<h1>Registrar cuenta</h1>

<FluentStack Orientation="Orientation.Vertical">
	<FluentTextField Label="Email" @bind-Value="User.Email" />
	<FluentSpacer />

	<FluentTextField Label="Contraseña" TextFieldType="TextFieldType.Password" @bind-Value="User.Password" />
	<FluentSpacer />

	<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
		<FluentButton Appearance="Appearance.Accent" @onclick="RegisterUser">
			Registrar
		</FluentButton>

		<p style="font-size: 12px; margin: 0;">Ya tienes cuenta? <a href="/login">Iniciá sesión</a></p>
	</FluentStack>

	<FluentSpacer />

	@if (!string.IsNullOrEmpty(Message))
	{
		<p>@Message</p>
	}
</FluentStack>

@code {
	private User User = new();
	private string Message = string.Empty;

	private async Task RegisterUser()
	{
		Message = string.Empty;

		var context = new ValidationContext(User);
		var results = new List<ValidationResult>();

		if (!Validator.TryValidateObject(User, context, results, true))
		{
			Message = string.Join("\n", results.Select(r => r.ErrorMessage));
			return;
		}
		using (var connection = new SqlConnection(Configuration.GetConnectionString("DefaultConnection")))
		{
			await connection.OpenAsync();

			bool exists = false;

			using (var command = new SqlCommand("SELECT COUNT(*) FROM Users WHERE Email = @Email", connection))
			{
				command.Parameters.AddWithValue("@Email", User.Email);

				exists = Convert.ToInt32(await command.ExecuteScalarAsync()) > 0;
			}

			if (exists)
			{
				Message = "Este email ya está registrado.";
				return;
			}

			using (var command = new SqlCommand("INSERT INTO Users (Email, Password) VALUES (@Email, @Password)", connection))
			{
				command.Parameters.AddWithValue("@Email", User.Email);
				command.Parameters.AddWithValue("@Password", User.Password);

				await command.ExecuteNonQueryAsync();
			}
		}

		Message = "Usuario registrado correctamente. Redirigiendo al inicio de sesión...";
		StateHasChanged();

		await Task.Delay(2000);
		NavigationManager.NavigateTo("/login");
	}
}
