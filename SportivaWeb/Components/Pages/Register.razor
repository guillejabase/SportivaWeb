@page "/register"
@using Microsoft.Data.SqlClient
@using SportivaWeb.DTOs
@using SportivaWeb.Models
@using System.ComponentModel.DataAnnotations
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Sportiva - Registrar cuenta</PageTitle>

<h1>Registrar cuenta</h1>

<FluentStack Orientation="Orientation.Vertical">
	<FluentTextField Label="Email" @bind-Value="UserData.Email" />
	<FluentSpacer />
	<FluentTextField Label="Contraseña" TextFieldType="TextFieldType.Password" @bind-Value="UserData.Password" />
	<FluentSpacer />
	<FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
		<FluentButton Appearance="Appearance.Accent" @onclick="RegisterData">Registrar</FluentButton>
		<p style="font-size: 12px; margin: 0;">Ya tienes cuenta? <a href="/login">Iniciá sesión</a></p>
	</FluentStack>
	<FluentSpacer />

	@if (!string.IsNullOrEmpty(Message))
	{
		<p>@Message</p>
	}
</FluentStack>

@code {
	private UserDTO UserData = new();
	private string? Message = string.Empty;

	private async Task RegisterData()
	{
		using (var connection = new SqlConnection(Configuration.GetConnectionString("DefaultConnection")))
		{
			await connection.OpenAsync();

			using (var command = new SqlCommand("INSERT INTO Users (Email, Password) VALUES (@Email, @Password)", connection))
			{
				command.Parameters.AddWithValue("@Email", UserData.Email);
				command.Parameters.AddWithValue("@Password", UserData.Password);

				await command.ExecuteNonQueryAsync();
			}
		}

		NavigationManager.NavigateTo("/login");
	}
}
