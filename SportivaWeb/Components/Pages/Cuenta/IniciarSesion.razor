@page "/cuenta/iniciar-sesion"
@inject IConfiguration configuration
@inject ISesionService sesionService
@inject IUsuariosService usuariosService
@inject NavigationManager navigationManager
@using Microsoft.Data.SqlClient
@using SportivaWeb.Models.DB
@using SportivaWeb.Services
@rendermode InteractiveServer

<PageTitle>Sportiva - Iniciar sesión</PageTitle>

<div style="height: 100%; display: flex; align-items: center; justify-content: center">
    <FluentStack Orientation="Orientation.Vertical"
                 HorizontalAlignment="HorizontalAlignment.Center">
        <h2 style="margin-bottom: 12px">Iniciar sesión</h2>

        <FluentStack Width="auto">
            <FluentStack Orientation="Orientation.Vertical"
                         Style="align-items: end">
                <FluentLabel Weight="FontWeight.Bold"
                             MarginBlock="6px"
                             Alignment="HorizontalAlignment.End">
                    Nombre de usuario o email:
                </FluentLabel>
                <FluentLabel Weight="FontWeight.Bold"
                             MarginBlock="6px"
                             Alignment="HorizontalAlignment.End">
                    Contraseña:
                </FluentLabel>

                <FluentSpacer />

                <FluentButton Appearance="Appearance.Accent"
                              @onclick="@(() => navigationManager.NavigateTo("/"))">
                    Cancelar
                </FluentButton>
            </FluentStack>

            <FluentStack Orientation="Orientation.Vertical">
                <FluentTextField Style="width: inherit"
                                 @bind-Value="nombreOEmail" />
                <FluentTextField TextFieldType="TextFieldType.Password"
                                 Style="width: inherit"
                                 @bind-Value="contra" />

                <FluentSpacer />

                <FluentStack VerticalAlignment="VerticalAlignment.Center"
                             Width="max-content">
                    <FluentButton Appearance="Appearance.Accent"
                                  @onclick="AccederAsync">
                        Iniciar sesión
                    </FluentButton>

                    <span>¿No tiene cuenta? <a href="/cuenta/registrarse">Regístrese</a></span>
                </FluentStack>
            </FluentStack>
        </FluentStack>

        <FluentSpacer />

        @if (!string.IsNullOrWhiteSpace(mensaje))
        {
            <span style="color: red; text-align: center">@((MarkupString)mensaje)</span>
        }
    </FluentStack>
</div>

@code {
    private string nombreOEmail = string.Empty;
    private string contra = string.Empty;
    private string? mensaje;

    private async Task AccederAsync()
    {
        mensaje = string.Empty;

        if (string.IsNullOrWhiteSpace(nombreOEmail) && string.IsNullOrWhiteSpace(contra))
        {
            mensaje = "Ingrese nombre de usuario o email.<br />Ingrese contraseña.";
            return;
        }
        if (string.IsNullOrWhiteSpace(nombreOEmail))
        {
            mensaje = "Ingrese nombre de usuario o email.";
            return;
        }

        var resultado = await usuariosService.ValidarCredencialesAsync(nombreOEmail, contra);

        if (!resultado.Existe)
        {
            mensaje = "El nombre de usuario o email no está registrado.";
            return;
        }
        if (string.IsNullOrWhiteSpace(contra))
        {
            mensaje = "Ingrese contraseña.";
            return;
        }
        if (resultado.Usuario == null)
        {
            mensaje = "La contraseña es incorrecta.";
            return;
        }

        sesionService.Iniciar(resultado.Usuario);
        navigationManager.NavigateTo(sesionService.Usuario?.Rol == 1 ? "/menu/usuarios" : "/menu/eventos");
    }
}
